<?php

use Microframe\Routing\Routes;
use PHPUnit\Framework\TestCase;

class HelpersTest extends TestCase
{
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $_SERVER['HTTP_HOST'] = 'microframe.test';
    }

    public function testisActive()
    {
        $_SERVER['REQUEST_URI'] = '/test/param/1';

        $routePath = '/test/param/{id}';
        Routes::get($routePath, 'WelcomeController@welcome')->name('test-active-url');

        $isActive = isActive('test-active-url', [
            'id' => 1,
        ]);

        $this->assertTrue($isActive);
    }

    public function testRoute()
    {
        $routePath = '/test/url';
        $expectedUrl = 'http://microframe.test/test/url';

        Routes::get($routePath, 'WelcomeController@welcome')->name('test-url');
        $generatedUrl = route('test-url');

        $this->assertEquals($expectedUrl, $generatedUrl);

        $this->expectException(Exception::class);
        route('non-existing-route');
    }

    public function testRouteWithParams()
    {
        $routePath = '/test/url/{id}';

        Routes::get($routePath, 'WelcomeController@welcome')->name('test-url-param');
        $generatedUrl = route('test-url-param', ['id' => 1]);

        $expectedUrl = 'http://microframe.test/test/url/1';
        $this->assertEquals($expectedUrl, $generatedUrl);

        $routePath = '/test/url/{id}/{slug}';
        $expectedUrl = 'http://microframe.test/test/url/1/text';

        Routes::get($routePath, 'WelcomeController@welcome')->name('test-url-2params');
        $generatedUrl = route('test-url-2params', [
            'id'   => 1,
            'slug' => 'text',
        ]);

        $this->assertEquals($expectedUrl, $generatedUrl);

        $this->expectException(Exception::class);
        route('non-existing-route');
    }

    public function testUrl()
    {
        $_SERVER['HTTP_HOST'] = 'microframe.test';

        $expectedUrl = 'http://microframe.test/testurl';
        $url = url('/testurl');

        $this->assertEquals($url, $expectedUrl);
    }
}
